<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tracking</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css"
      integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      #map {
        width: 100vw;
        height: 100vh;
      }
      #username {
        position: absolute;
        top: 10px;
        left: 10px;
        background: white;
        padding: 10px;
        border-radius: 5px;
        z-index: 1000;
      }
    </style>
  </head>
  <body>
    <div id="username"></div>
    <div id="map"></div>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js"
      integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const username = new URLSearchParams(window.location.search).get('username') || 'Anonymous';
      document.getElementById('username').innerText = `Username: ${username}`;

      if (navigator.geolocation) {
        navigator.geolocation.watchPosition(
          (position) => {
            const { latitude, longitude } = position.coords;
            socket.emit("send-location", { latitude, longitude, username });
          },
          (error) => {
            console.error(error);
          },
          {
            enableHighAccuracy: true,
            timeout: 5000,
            maximumAge: 0,
          }
        );
      }

      const map = L.map("map").setView([0, 0], 16);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "OpenStreetMap"
      }).addTo(map);

      const markers = {};

      socket.on("receive-location", (data) => {
        const { id, latitude, longitude, username } = data;
        map.setView([latitude, longitude]);

        if (markers[id]) {
          markers[id].setLatLng([latitude, longitude]);
          markers[id].bindPopup(`Username: ${username}`).openPopup();
        } else {
          markers[id] = L.marker([latitude, longitude]).addTo(map);
          markers[id].bindPopup(`Username: ${username}`).openPopup();
        }
      });

      socket.on("user-disconnected", function (id) {
        if (markers[id]) {
          map.removeLayer(markers[id]);
          delete markers[id];
        }
      });
    </script>
  </body>
</html>
